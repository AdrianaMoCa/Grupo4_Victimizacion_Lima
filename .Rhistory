vehi_sexo |>
filter(!is.na(Robo_vehiculo)) |>
ggplot(mapping = aes(x=Sexo ,  group=Robo_vehiculo)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vehículo", x="¿Usted cree que puede ser víctima del robo de su vehículo?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima$Robo_vivienda <- factor(lima$Robo_vivienda,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_vivienda)
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
vivi_sexo <- lima[lima$Robo_vivienda %in% c("Sí"),]
vivi_sexo |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Sexo,  group=Robo_vivienda)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima$Robo_sinviolencia <- factor(lima$Robo_sinviolencia,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_sinviolencia)
lima |>
filter(!is.na(Robo_sinviolencia)) |>
ggplot(lima, mapping = aes(x= Robo_sinviolencia,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo sin violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo sin violenciaa", x="¿Usted cree que puede ser víctima de robo sin violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
robosinviol_sexo <- lima[lima$Robo_sinviolencia %in% c("Sí"),]
robosinviol_sexo |>
filter(!is.na(Robo_sinviolencia)) |>
ggplot(lima, mapping = aes(x= Sexo,  group=Robo_sinviolencia)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo sin violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo sin violencia", x="¿Usted cree que puede ser víctima de robo sin violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima$Robo_conviolencia <- factor(lima$Robo_conviolencia,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_conviolencia)
lima |>
filter(!is.na(Robo_conviolencia)) |>
ggplot(lima, mapping = aes(x= Robo_conviolencia,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo con violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo con violenciaa", x="¿Usted cree que puede ser víctima de robo con violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
roboconviol_sexo <- lima[lima$Robo_conviolencia %in% c("Sí"),]
roboconviol_sexo |>
filter(!is.na(Robo_conviolencia)) |>
ggplot(lima, mapping = aes(x= Sexo,  group=Robo_conviolencia)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo con violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo con violencia", x="¿Usted cree que puede ser víctima de robo con violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
vict = lima |>
select(UBIGEO, NOMBREDI, Sexo, victima_delito)
d_vict = vict |>
filter(victima_delito == "Sí") |>
group_by(NOMBREDI) |>
summarise(victima_delito = n())
d_vict
vehiculo = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_vehiculo)
d_vehiculo = vehiculo |>
filter(Robo_vehiculo == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_vehiculo = n())
d_vehiculo
vivienda = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_vivienda)
d_vivienda = vivienda |>
filter(Robo_vivienda == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_vivienda = n())
d_vivienda
sin_violencia = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_sinviolencia)
d_sinviolencia = sin_violencia |>
filter(Robo_sinviolencia == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_sinviolencia = n())
d_sinviolencia
con_violencia = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_conviolencia)
d_conviolencia = con_violencia |>
filter(Robo_conviolencia == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_conviolencia = n())
d_conviolencia
base_1 <- merge(d_vict, d_vehiculo, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
base_2 <- merge(base_1, d_vivienda, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
base_3 <- merge(base_2, d_sinviolencia, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
vict_dist <- merge(base_3, d_conviolencia, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
vict_dist[is.na(vict_dist)] <- 0
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_vehiculo))+
geom_point() +
labs( x = "Víctima de un delito", y = "Víctima de robo de vehículo")
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_vivienda))+
geom_point()+
labs( x = "Víctima de un delito", y = "Víctima de robo de vivienda")
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_sinviolencia))+
geom_point() +
labs( x = "Víctima de un delito", y = "Víctima de robo sin violencia")
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_conviolencia))+
geom_point() +
labs( x = "Víctima de un delito", y = "Víctima de robo con vehículo")
vict_dist |>
ggplot(aes(x = Robo_vehiculo, y = Robo_vivienda))+
geom_point() +
labs( x = "Víctima de robo de vehículo", y = "Víctima de robo de vivienda")
vict_dist |>
ggplot(aes(x = Robo_sinviolencia, y = Robo_conviolencia))+
geom_point()+
labs( x = "Víctima de robo sin violencia", y = "Víctima de robo con violencia")
library(psych)
vict_dist <- data.frame(vict_dist)
vict_dist_1 <- vict_dist |>
select(Robo_vehiculo, Robo_vivienda, Robo_sinviolencia, Robo_conviolencia)
corr.test(vict_dist_1)
#matrixcor <- cor(vict_dist_1)
#cor.plot(matrixcor)
KMO(vict_dist_1)
library(rela)
cortest.bartlett(matrixcor,n=dim(vict_dist_1)[1])
install.packages("rela")
install.packages("rela")
library(rela)
cortest.bartlett(matrixcor,n=dim(vict_dist_1)[1])
knitr::opts_chunk$set(echo = TRUE)
scree(vict_dist_1, pc = TRUE, factor = FALSE)
install.packages("cortest.bartlett")
fa.parallel(vict_dist_1, fa = "pc")
pc <- prcomp(x=vict_dist_1,scale=TRUE, center=TRUE)
names(pc)
summary(pc)
pc$rotation
library(factoextra)
fviz_eig(pc)
pc$x
fviz_pca_var(pc)
vict_final <- vict_dist |>
mutate(pc1 = pc$x[,1])
library(dplyr)
library(tidyverse)
library(rio)
library(lubridate)
library(data.table)
library(ggplot2)
library(dplyr)
vict_final <- vict_dist |>
mutate(pc1 = pc$x[,1])
names(vict_final)[names(vict_final) == 'pc1'] <- 'Indicador'
library(rela)
cortest.bartlett(matrixcor,n=dim(vict_dist_1)[1])
scree(vict_dist_1, pc = TRUE, factor = FALSE)
install.packages("scree")
library(lubridate)
library(kableExtra)
vict_final |>
select(NOMBREDI, Indicador) |>
arrange(desc(Indicador)) |>
kable() |>
kable_styling()
library(geojsonio)
library(sf)
library(ggrepel)
library(tidyverse)
library(rio)
link_mapa = "https://github.com/ChristianChiroqueR/banco_de_datos/raw/main/Mapas_Peru/DISTRITOS.json"
spdf <- geojson_read(link_mapa,  what = "sp") #archivo json
peru<-st_as_sf(spdf) # Lo convertimos a tipo sf para mayor facilidad
shp_lima <- peru |>
filter(DEPARTAMEN == "LIMA")
ggplot(data = shp_lima) + geom_sf()
ggplot(data = shp_lima) +
geom_sf(fill="skyblue", color="black")
data_mapa <- shp_lima  |>
left_join(vict_final)
View(vict_final)
View(shp_lima)
names(vict_final)[names(vict_final) == 'NOMBREDI'] <- 'DISTRITO'
data_mapa <- shp_lima  |>
left_join(vict_final)
View(data_mapa)
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa del Perú según cluster de pobreza",
caption = "Fuente: INEI, JNE, ETC
Elaboración: Grupo 6",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)), na.rm = FALSE)+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)), na.rm = FALSE, show.legend = NA)+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
geom_sf_label(aes(label = DISTRITO)) +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
geom_sf_label(aes(label = DISTRITO))
data1 <- na.omit(lima)
View(data1)
data2 <- na.omit(lima$Robo_vivienda)
data1 <- na.omit(lima$Robo_vivienda)
lima |>
filter(=!is.na(Robo_vivienda)) |>
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
library(dplyr)
library(tidyverse)
library(rio)
library(lubridate)
library(data.table)
library(ggplot2)
library(dplyr)
library(scales)
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima |>
filter(!=is.na(Robo_vivienda)) |>
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
data1 <- na.omit(lima) |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
View(data1)
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_colour_gradient2(low="blue",
high="red",
mid="yellow") +
scale_fill_discrete(name = "Clusters")
geom_sf_label(aes(label = DISTRITO))
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
scale_fill_viridis_c(option = "magma") +
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
geom_sf_label(aes(label = DISTRITO))
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
scale_fill_viridis_c(option = "magma") +
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
scale_fill_viridis_c(option = "magma", name = "Clusters") +
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
scale_fill_viridis_c(option = "magma") +
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
scale_fill_viridis_c(option = "magma") +
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud",
fill= "Clusters")
ggplot(data_mapa) +
ggplot2::geom_sf(aes(fill = as.factor(Indicador)))+
scale_fill_viridis_c(option = "magma") +
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud",
fill= "Clusters")
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
geom_sf_label(aes(label = DISTRITO))
ggplot(data = data_mapa) +
ggplot2::geom_sf(data = data_mapa) +
aes(fill = as.factor(Indicador)) +
scale_fill_viridis_c(option = "magma") +
labs(title = "Defense Expenditure by Share of GDP (%)",
subtitle = "NATO Member States",
fill = "Share of GDP (%)") +
theme_bw() +
theme(plot.title =
element_text(hjust = 0.5)) +
theme(plot.subtitle =
element_text(hjust = 0.5))
View(data_mapa)
ggplot(data_mapa) +
geom_sf(aes(fill = Indicador))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
library(RColorBrewer)
display.brewer.all()
View(spdf)
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_distiller(palette = "Spectral")
View(vict_final)
View(vict_dist_1)
distancias= daisy(vict_dist_1, metric="gower")
library(cluster)
library(ggrepel)
library(psych)
library(scatterplot3d)
library(rgl)
distancias= daisy(vict_dist_1, metric="gower")
fviz_nbclust(vict_dist_1, pam,diss=distancias,method = "silhouette",k.max = 10,verbose = F)
particion = pam(distancias,2,cluster.only = F)
distancias= daisy(vict_dist_1, metric="gap_stat")
fviz_nbclust(vict_dist_1, pam,diss=distancias,method = "gap_stat",k.max = 10,verbose = F)
particion = pam(distancias,2,cluster.only = F)
fviz_nbclust(vict_dist_1, pam,diss=distancias,method = "silhouette",k.max = 10,verbose = F)
particion = pam(distancias,2,cluster.only = F)
fviz_silhouette(particion, label=TRUE)
particion$silinfo$widths |> data.frame() |> filter(sil_width<0)
vict_dist_1 |> mutate(particion=particion$clustering) |>
group_by(particion) |>
summarise(
Robo_vivienda = mean(Robo_vivienda),
Robo_calle = mean(Robo_calle),
Robo_sinviolencia=mean(Robo_sinviolencia),
Robo_conviolencia=mean(Robo_conviolencia))
vict_dist_1 |> mutate(particion=particion$clustering) |>
group_by(particion) |>
summarise(
Robo_vivienda = mean(Robo_vivienda),
Robo_vehiculo = mean(Robo_vehiculo),
Robo_sinviolencia=mean(Robo_sinviolencia),
Robo_conviolencia=mean(Robo_conviolencia))
vict_dist_1$particion = particion$clustering
vict_dist_1$particion = as.factor(vict_dist_1$particion)
levels(vict_dist_1$particion) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(vict_dist_1$particion)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$particion),
geom = c("text"),
ellipse.type = "convex")
fviz_nbclust(vict_dist_1[,1:4], hcut,diss=distancias,method = "silhouette",k.max = 10,verbose = F)
aglomerativo = hcut(distancias, k = 2,hc_func='agnes',hc_method = "ward.D")
fviz_silhouette(aglomerativo, label=TRUE)  ## tiene el mismo promedio, pero solo un caso mal clasificado
fviz_dend(aglomerativo, rect = TRUE, cex = 0.5)
vict_dist_1 |> mutate(aglomerativo=aglomerativo$cluster) |> group_by(aglomerativo) |>
summarise(
Robo_vivienda = mean(Robo_vivienda),
Robo_vehiculo = mean(Robo_vehiculo),
Robo_sinviolencia=mean(Robo_sinviolencia),
Robo_conviolencia=mean(Robo_conviolencia))
vict_dist_1$aglomerativo = aglomerativo$cluster
vict_dist_1$aglomerativo = as.factor(vict_dist_1$aglomerativo)
levels(vict_dist_1$aglomerativo) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(vict_dist_1$aglomerativo)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$aglomerativo),
geom = c("text"),
ellipse.type = "convex")
divisivo = hcut(distancias, k = 2,hc_func='diana')
fviz_silhouette(divisivo, label=TRUE)
fviz_dend(divisivo, rect = TRUE, cex = 0.5)
vict_dist_1$divisivo = divisivo$cluster
vict_dist_1$divisivo = as.factor(vict_dist_1$divisivo)
levels(vict_dist_1$divisivo) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(vict_dist_1$divisivo)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$divisivo),
geom = c("text"),
ellipse.type = "convex")
View(base_3)
vict_dist_1$particion = particion$clustering
vict_dist_1$particion = as.factor(vict_dist_1$particion)
levels(vict_dist_1$particion) = c("Bajo nivel de victimización", "Alto nivel de victimización")
table(vict_dist_1$particion)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$particion),
geom = c("text"),
ellipse.type = "convex")
vict_dist_1$particion = particion$clustering
vict_dist_1$particion = as.factor(vict_dist_1$particion)
levels(vict_dist_1$particion) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(vict_dist_1$particion)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$particion),
geom = c("text"),
ellipse.type = "convex")
vict_dist_1$aglomerativo = aglomerativo$cluster
vict_dist_1$aglomerativo = as.factor(vict_dist_1$aglomerativo)
levels(vict_dist_1$aglomerativo) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(vict_dist_1$aglomerativo)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$aglomerativo),
geom = c("text"),
ellipse.type = "convex")
vict_dist_1$divisivo = divisivo$cluster
vict_dist_1$divisivo = as.factor(vict_dist_1$divisivo)
levels(vict_dist_1$divisivo) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(vict_dist_1$divisivo)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$divisivo),
geom = c("text"),
ellipse.type = "convex")
vict_dist_1$divisivo = divisivo$cluster
vict_dist_1$divisivo = as.factor(vict_dist_1$divisivo)
levels(vict_dist_1$divisivo) = c("Bajo nivel de victimización", "Alto nivel de victimización")
table(vict_dist_1$divisivo)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = vict_dist_1$divisivo),
geom = c("text"),
ellipse.type = "convex")
