library(shiny); runApp('app_final.R')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(rio)
library(lubridate)
library(data.table)
library(ggplot2)
library(dplyr)
link_lima="https://github.com/AdrianaMosqueira/Grupo4_Victimizacion_Lima/raw/main/Data/vict_lima.csv"
lima = import(link_lima)
class(lima)
dim(lima)
lima= lima |>
mutate(Zona=
case_when(NOMBREDI %in% c("SANTA ROSA","PUENTE PIEDRA","ANCON","CARABAYLLO", "INDEPENDENCIA","COMAS","SAN MARTIN DE PORRES","LOS OLIVOS")~"LIMA NORTE",
NOMBREDI %in% c("RIMAC","LA VICTORIA","LIMA","BREÑA","SAN LUIS")~"LIMA CENTRO",
NOMBREDI %in% c("BARRANCO","SURQUILLO","LINCE","MAGDALENA DEL MAR","SANTIAGO DE SURCO","SAN MIGUEL","LA MOLINA","JESUS MARIA", "PUEBLO LIBRE","SAN BORJA","MIRAFLORES","SAN ISIDRO")~"LIMA MODERNA",
NOMBREDI %in% c("LURIGANCHO","SAN JUAN DE LURIGANCHO","ATE","EL AGUSTINO","SANTA ANITA","CHACLACAYO")~"LIMA ESTE",
NOMBREDI %in% c("CHORRILLOS","LURIN","PACHACAMAC","PUCUSANA","PUNTA HERMOSA","SAN JUAN DE MIRAFLORES","VILLA EL SALVADOR","VILLA MARIA DEL TRIUNFO")~"LIMA SUR",
FALSE~"Ninguno"))
table(lima$Zona)
lima$NOMBREDI = gsub("Ã‘", "Ñ", lima$NOMBREDI)
names(lima)[names(lima) == 'C200_P7'] <- 'Sexo'
names(lima)[names(lima) == 'C300_P4'] <- 'victima_delito'
names(lima)[names(lima) == 'C300_P5_1'] <- 'Robo_vehiculo'
names(lima)[names(lima) == 'C300_P5_2'] <- 'Robo_vivienda'
names(lima)[names(lima) == 'C300_P5_3'] <- 'Robo_sinviolencia'
names(lima)[names(lima) == 'C300_P5_4'] <- 'Robo_conviolencia'
names(lima)[names(lima) == 'C300_P11A_1'] <- 'Confianza_PNP'
lima$Sexo <- factor(lima$Sexo,
labels = c("Hombre", "Mujer")) # Respetar el orden
levels(lima$Sexo)
lima$victima_delito <- factor(lima$victima_delito,
labels = c("Sí", "No")) # Respetar el orden
levels(lima$victima_delito)
library(scales)
lima |>
ggplot(aes(x= victima_delito,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent", fill="¿Usted cree ser víctima de algún delito?") +
facet_grid(~Zona) +
scale_y_continuous(labels=percent)+
labs(title="Porcentaje de victimización por zona de Lima", x="¿Usted cree que puede ser víctima de algún delito?")+
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "bottom")+
theme(legend.position = "none")
vict_sexo <- lima[lima$victima_delito %in% c("Sí"),]
vict_sexo |>
ggplot(aes(x= Sexo,  group= victima_delito)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent", fill="Sexo") +
facet_grid(~Zona) +
scale_y_continuous(labels=percent)+
labs(title="Porcentaje de victimización por zona de Lima y por sexo", x="Sexo")+
scale_fill_brewer(palette = "Set1") +
theme(legend.position = "bottom")+
theme(legend.position = "none")
lima$Robo_vehiculo <- factor(lima$Robo_vehiculo,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_vehiculo)
lima |>
filter(!is.na(Robo_vehiculo)) |>
ggplot(mapping = aes(x= Robo_vehiculo,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vehículo", x="¿Usted cree que puede ser víctima del robo de su vehículo?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
vehi_sexo <- lima[lima$Robo_vehiculo %in% c("Sí"),]
vehi_sexo |>
filter(!is.na(Robo_vehiculo)) |>
ggplot(mapping = aes(x=Sexo ,  group=Robo_vehiculo)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vehículo", x="¿Usted cree que puede ser víctima del robo de su vehículo?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima$Robo_vivienda <- factor(lima$Robo_vivienda,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_vivienda)
lima |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Robo_vivienda,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
vivi_sexo <- lima[lima$Robo_vivienda %in% c("Sí"),]
vivi_sexo |>
filter(!is.na(Robo_vivienda)) |>
ggplot(lima, mapping = aes(x= Sexo,  group=Robo_vivienda)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima del robo de su vehículo?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo de vivienda", x="¿Usted cree que puede ser víctima del robo de su vivienda?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima$Robo_sinviolencia <- factor(lima$Robo_sinviolencia,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_sinviolencia)
lima |>
filter(!is.na(Robo_sinviolencia)) |>
ggplot(lima, mapping = aes(x= Robo_sinviolencia,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo sin violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo sin violencia", x="¿Usted cree que puede ser víctima de robo sin violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
robosinviol_sexo <- lima[lima$Robo_sinviolencia %in% c("Sí"),]
robosinviol_sexo |>
filter(!is.na(Robo_sinviolencia)) |>
ggplot(lima, mapping = aes(x= Sexo,  group=Robo_sinviolencia)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo sin violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo sin violencia", x="¿Usted cree que puede ser víctima de robo sin violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
lima$Robo_conviolencia <- factor(lima$Robo_conviolencia,
labels = c("No", "Sí")) # Respetar el orden
levels(lima$Robo_conviolencia)
lima |>
filter(!is.na(Robo_conviolencia)) |>
ggplot(lima, mapping = aes(x= Robo_conviolencia,  group=Zona)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo con violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo con violenciaa", x="¿Usted cree que puede ser víctima de robo con violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
roboconviol_sexo <- lima[lima$Robo_conviolencia %in% c("Sí"),]
roboconviol_sexo |>
filter(!is.na(Robo_conviolencia)) |>
ggplot(lima, mapping = aes(x= Sexo,  group=Robo_conviolencia)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) + labs(y = "Percent", fill="¿Usted cree que puede ser víctima de robo con violencia?") + facet_grid(~Zona) + scale_y_continuous(labels=percent)+labs(title="Porcentaje de victimización por robo con violencia", x="¿Usted cree que puede ser víctima de robo con violencia?")+ scale_fill_brewer(palette = "Set1")+theme(legend.position = "bottom")+theme(legend.position = "none")
vict = lima |>
select(UBIGEO, NOMBREDI, Sexo, victima_delito)
d_vict = vict |>
filter(victima_delito == "Sí") |>
group_by(NOMBREDI) |>
summarise(victima_delito = n())
d_vict
vehiculo = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_vehiculo)
d_vehiculo = vehiculo |>
filter(Robo_vehiculo == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_vehiculo = n())
d_vehiculo
vivienda = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_vivienda)
d_vivienda = vivienda |>
filter(Robo_vivienda == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_vivienda = n())
d_vivienda
sin_violencia = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_sinviolencia)
d_sinviolencia = sin_violencia |>
filter(Robo_sinviolencia == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_sinviolencia = n())
d_sinviolencia
con_violencia = lima |>
select(UBIGEO, NOMBREDI, Sexo, Robo_conviolencia)
d_conviolencia = con_violencia |>
filter(Robo_conviolencia == "Sí") |>
group_by(NOMBREDI) |>
summarise(Robo_conviolencia = n())
d_conviolencia
base_1 <- merge(d_vict, d_vehiculo, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
base_2 <- merge(base_1, d_vivienda, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
base_3 <- merge(base_2, d_sinviolencia, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
vict_dist <- merge(base_3, d_conviolencia, by.x = "NOMBREDI",
by.y = "NOMBREDI", all.x = TRUE, all.y = FALSE)
vict_dist[is.na(vict_dist)] <- 0
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_vehiculo))+
geom_point() +
labs( x = "Víctima de un delito", y = "Víctima de robo de vehículo")
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_vivienda))+
geom_point()+
labs( x = "Víctima de un delito", y = "Víctima de robo de vivienda")
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_sinviolencia))+
geom_point() +
labs( x = "Víctima de un delito", y = "Víctima de robo sin violencia")
vict_dist |>
ggplot(aes(x = victima_delito, y = Robo_conviolencia))+
geom_point() +
labs( x = "Víctima de un delito", y = "Víctima de robo con vehículo")
vict_dist |>
ggplot(aes(x = Robo_vehiculo, y = Robo_vivienda))+
geom_point() +
labs( x = "Víctima de robo de vehículo", y = "Víctima de robo de vivienda")
vict_dist |>
ggplot(aes(x = Robo_sinviolencia, y = Robo_conviolencia))+
geom_point()+
labs( x = "Víctima de robo sin violencia", y = "Víctima de robo con violencia")
library(psych)
vict_dist <- data.frame(vict_dist)
vict_dist_1 <- vict_dist |>
select(Robo_vehiculo, Robo_vivienda, Robo_sinviolencia, Robo_conviolencia)
corr.test(vict_dist_1)
matrixcor <- cor(vict_dist_1)
cor.plot(matrixcor)
KMO(vict_dist_1)
library(rela)
library(factoextra)
library(psych)
cortest.bartlett(matrixcor, n=dim(vict_dist_1)[1])
scree(vict_dist_1, pc = TRUE, factor = FALSE)
fa.parallel(vict_dist_1, fa = "pc")
pc <- prcomp(x=vict_dist_1,scale=TRUE, center=TRUE)
names(pc)
summary(pc)
pc$rotation
library(factoextra)
fviz_eig(pc)
pc$x
fviz_pca_var(pc)
vict_final <- vict_dist |>
mutate(pc1 = pc$x[,1])
names(vict_final)[names(vict_final) == 'pc1'] <- 'Indicador'
library(lubridate)
library(kableExtra)
vict_final |>
select(NOMBREDI, Indicador) |>
arrange(desc(Indicador)) |>
kable() |>
kable_styling()
library(geojsonio)
library(sf)
library(ggrepel)
library(tidyverse)
library(rio)
link_mapa = "https://github.com/ChristianChiroqueR/banco_de_datos/raw/main/Mapas_Peru/DISTRITOS.json"
spdf <- geojson_read(link_mapa,  what = "sp") #archivo json
peru<-st_as_sf(spdf) # Lo convertimos a tipo sf para mayor facilidad
shp_lima <- peru |>
filter(DEPARTAMEN == "LIMA")
#export(shp_lima,"shp_lima.json")
#link_shp_lima="https://github.com/AdrianaMosqueira/Grupo4_Victimizacion_Lima/raw/main/Data/shp_lima.json"
#shp_lima = import(link_shp_lima)
ggplot(data = shp_lima) + geom_sf()
ggplot(data = shp_lima) +
geom_sf(fill="dodgerblue4", color="floralwhite")
names(vict_final)[names(vict_final) == 'NOMBREDI'] <- 'DISTRITO'
data_mapa <- shp_lima  |>
left_join(vict_final)
ggplot(data_mapa) +
geom_sf(aes(fill = as.factor(Indicador)))+
labs(title = "Mapa de Lima Metropolitana de victimización por PCA",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
library(cluster)
library(ggrepel)
library(psych)
library(scatterplot3d)
library(rgl)
#library(NbClust)
## Para identificar el número de clusters ideal
#resnumclust<-NbClust(vict_dist_1, distance = "euclidean", min.nc=2, #max.nc=10, method = "ward.D", index = "alllong")
#fviz_nbclust(resnumclust)
medoides = vict_dist
distancias= daisy(vict_dist_1, metric="gower")
fviz_nbclust(vict_dist_1, pam,diss=distancias,method = "silhouette",k.max = 10,verbose = F)
particion = pam(distancias,2,cluster.only = F)
fviz_silhouette(particion, label=TRUE)
vict_dist_1 |> mutate(particion=particion$clustering) |>
group_by(particion) |>
summarise(
Robo_vivienda = mean(Robo_vivienda),
Robo_vehiculo = mean(Robo_vehiculo),
Robo_sinviolencia=mean(Robo_sinviolencia),
Robo_conviolencia=mean(Robo_conviolencia))
medoides$particion = particion$clustering
medoides$particion = as.factor(medoides$particion)
levels(medoides$particion) = c("Alto nivel de victimización", "Bajo nivel de victimización")
table(medoides$particion)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = medoides$particion),
geom = c("text"),
ellipse.type = "convex")
names(medoides)[names(medoides) == 'NOMBREDI'] <- 'DISTRITO'
data_mapa1 <- shp_lima  |>
left_join(medoides)
ggplot(data_mapa1) +
geom_sf(aes(fill = as.factor(particion)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
diana = vict_dist
divisivo = hcut(distancias, k = 2,hc_func='diana')
fviz_silhouette(divisivo, label=TRUE)
fviz_dend(divisivo, rect = TRUE, cex = 0.5)
diana$divisivo = divisivo$cluster
diana$divisivo = as.factor(diana$divisivo)
levels(diana$divisivo) = c("Bajo nivel de victimización", "Alto nivel de victimización")
table(diana$divisivo)
fviz_cluster(object = list(data=vict_dist_1[,1:4], cluster = diana$divisivo),
geom = c("text"),
ellipse.type = "convex")
names(diana)[names(diana) == 'NOMBREDI'] <- 'DISTRITO'
data_mapa2 <- shp_lima  |>
left_join(diana)
ggplot(data_mapa2) +
geom_sf(aes(fill = as.factor(divisivo)))+
labs(title = "Mapa de Lima Metropolitana según cluster de victimización",
caption = "Fuente: INEI 2017
Elaboración: Grupo 4",
x="Longitud",
y="Latitud") +
scale_fill_discrete(name = "Clusters")
runApp('app_final.R')
